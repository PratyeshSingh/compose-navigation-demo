[versions]
compileSdk                     = "34"
minSdk                         = "24"
targetSdk                      = "34"
androidGradlePluginVersion-experiment = '8.1.0-beta05'
androidGradlePluginVersion-stable8 = '8.0.2'
composeCompiler                 = "1.5.4"
kotlinxCoroutinesCore           = '1.7.1'
mockitoKotlin                   = '3.2.0'
mockitoAndroid                  = '3.12.4'
materialIconCore                = '1.5.4'
cameraxVersion                  = '1.3.1'
dagger                          = "2.50"
roomVersion                     = "2.6.1"

#[plugins]
#kspPlugin              = { id = "com.google.devtools.ksp", version.ref = "kspVersion" }
#protocolBufferPlugin   = { id = "com.google.protobuf", version.ref = "protocolBufferPluginVersion" }
#paparazziPlugin        = { id = "dev.chrisbanes.paparazzi", version.ref = "paparazzi"}

[libraries]
datastore-preferences  = "androidx.datastore:datastore-preferences:1.0.0"
kotlinx-serialization-json= "org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1"
composeBom             = "androidx.compose:compose-bom:2023.10.01"
androidXNavigation     = "androidx.navigation:navigation-compose:2.7.6"
activityCompose        = "androidx.activity:activity-compose:1.8.2"
lifecycleRuntime-ktx   = "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
androidxCore           = "androidx.core:core-ktx:1.12.0"
composeUi              = { module = "androidx.compose.ui:ui", version.ref = "composeCompiler" }
composeUiGraphics      = { module = "androidx.compose.ui:ui-graphics" }
composeUiToolingPreview= { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeCompiler" }
composeMaterial3       = "androidx.compose.material3:material3:1.1.2"
materialIconCore       = { module = "androidx.compose.material:material-icons-core", version.ref = "materialIconCore"}
materialIconExtend     = { module = "androidx.compose.material:material-icons-extended", version.ref = "materialIconCore"}
collectionsImmutable   = "org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.5"
coroutinesCore         = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutinesCore" }

# Testing sdks
junit                  = "junit:junit:4.13.2"
coroutinesTest         = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutinesCore" }
androidxJunit          = "androidx.test.ext:junit:1.1.5"
espressoCore           = "androidx.test.espresso:espresso-core:3.5.1"
composeUiTestJnit      = { module = "androidx.compose.ui:ui-test-junit4" }
composeUiTestManifest  = { module = "androidx.compose.ui:ui-test-manifest" }
composeUiTooling       = { module = "androidx.compose.ui:ui-tooling" }
mockitoKotlin          = { module = "org.mockito.kotlin:mockito-kotlin" , version.ref = "mockitoKotlin" }
mockitoAndroid         = { module = "org.mockito:mockito-android" , version.ref = "mockitoAndroid" }

# Image loading sdk
coilCompose            = "io.coil-kt:coil-compose:2.4.0"

# For runtiime permission
accompanistPermissions = "com.google.accompanist:accompanist-permissions:0.22.1-rc"

# Video player sdk
exoplayerCore          = "com.google.android.exoplayer:exoplayer-core:2.19.1"
exoplayerUi            = "com.google.android.exoplayer:exoplayer-ui:2.19.1"

# Camera Sdk to capture image & video
camera-core              = { module = "androidx.camera:camera-core", version.ref = "cameraxVersion" }
camera-camera2           = { module = "androidx.camera:camera-camera2", version.ref = "cameraxVersion" }
camera-lifecycle         = { module = "androidx.camera:camera-lifecycle", version.ref = "cameraxVersion" }
camera-video              = { module = "androidx.camera:camera-video", version.ref = "cameraxVersion" }
camera-view              = { module = "androidx.camera:camera-view", version.ref = "cameraxVersion" }
camera-extensions        = { module = "androidx.camera:camera-extensions", version.ref = "cameraxVersion" }

# Room
room-runtime             = {module = "androidx.room:room-runtime", version.ref = "roomVersion"}
room-compiler            = {module = "androidx.room:room-compiler", version.ref = "roomVersion"}
room-ktx                 = {module = "androidx.room:room-ktx", version.ref = "roomVersion"}
database-sqlcipher       = "net.zetetic:android-database-sqlcipher:4.5.3"

# Dependency Injection
dagger                   = {module = "com.google.dagger:dagger", version.ref = "dagger"}
daggerSPI                = {module = "com.google.dagger:dagger-spi", version.ref = "dagger"}
daggerCompiler           = {module = "com.google.dagger:dagger-compiler", version.ref = "dagger"}
daggerLint               = {module = "com.google.dagger:dagger-lint-aar", version.ref = "dagger"}
hiltCore                 = {module = "com.google.dagger:hilt-core", version.ref = "dagger"}
hiltAndroid              = {module = "com.google.dagger:hilt-android", version.ref = "dagger"}
gradlePlugin-hilt        = {module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "dagger"}
hiltTesting              = {module = "com.google.dagger:hilt-android-testing", version.ref = "dagger"}
hiltCompiler             = {module = "com.google.dagger:hilt-compiler", version.ref = "dagger"}